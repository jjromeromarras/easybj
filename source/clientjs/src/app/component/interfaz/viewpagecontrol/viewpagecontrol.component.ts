import { Component, Input, SimpleChange } from '@angular/core';
import { ViewPageControl } from '../../../model/interfaz/view/controls/viewpagecontrol';
import { eViewModes } from '../../../model/interfaz/enums/eviewmodes';
import { ViewPanelPage } from '../../../model/interfaz/view/controls/viewpanelpage';
@Component({
    selector: 'app-viewpagecontrol',
    templateUrl: './viewpagecontrol.component.html'
})

export class ViewPageControlComponent {
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // INPUT/OUTPUT FIELDS
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    @Input() pagecontrol: ViewPageControl;
    @Input() fullscreen: boolean;
    @Input() viewMode: eViewModes;

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // PUBLIC FIELDS
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public pages: Array<ViewPanelPage>;

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // CONSTRUCTOR
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    constructor() {
        this.pages = [];
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // NG METHODS
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ngOnChanges(changes: { [propkey: string]: SimpleChange }) {
        for (let propName in changes) {
            if (propName == 'pagecontrol') {
                this.pagecontrol = changes[propName].currentValue;
            }
        }

        this.pages = this.pagecontrol.pages.filter(p => p.currentVisible == true && p.controls.filter(c => c.currentVisible).length > 0).sort((n1, n2) => {
            if (n1.sequence > n2.sequence) {
                return 1;
            } else {
                return -1;
            };
        });
    }
}